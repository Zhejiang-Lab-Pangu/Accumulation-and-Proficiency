可执行文件的装载与进程


1. 进程虚拟地址空间
1.1 每个程序运行起来后，将拥有自己独立的虚拟地址空间（Virtual Adress Space），此空间大小由CPU的位数决定；硬件决定了地址空间的最大理论上限，即硬件的寻址空间大小，如:
    (1) 32位硬件平台决定了虚拟地址空间的地址为 0 ～ 2^32-1，即0x00000000 ~0xFFFFFFFF，即我们常说的4GB虚拟空间大小;
    (2) 64位硬件平台具有64位寻址能力，其虚拟地址空间大小达到了 2^64 byte，总共17 179 869 184 GB;
    (3) 可通过C语言的指针大小来判断虚拟空间的大小：指针大小的位数与虚拟空间的位数相同，即32位平台指针大小32bit，即4字节；64位平台指针大小64bit，即8字节。
1.2 进程的虚拟地址空间均在操作系统的掌握之中，进程只能使用那些操作系统分配给进程的地址，若访问未经允许的空间，操作系统就会捕获这些访问，将进程的这种访问当作非法操作，强制结束进程。（如‘Segmentation fault’）

2. 装载的方式
3. 从操作系统角度看可执行文件的装载
4. 进程虚存空间分布
5. Linux内核装载ELF过程简介
