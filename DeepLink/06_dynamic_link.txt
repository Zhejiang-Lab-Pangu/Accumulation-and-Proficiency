动态链接

1. 为什么要动态链接
1.1 内存和磁盘空间
    在静态链接情况下，多个可执行文件链接相同的模块(如目标文件)时。在磁盘和内存中都需要相同的副本，造成很大的空间浪费。
1.2 程序开发和发布
    若程序的可执行文件所需的一个目标文件更新，则需要重新链接，形成新的可执行文件，再发布给用户。
1.3 动态链接
    (1) 动态链接基本思想：将程序的模块分割开来，不再静态的链接在一起，即不对那些组成程序的目标文件进行链接，等到程序运行时才进行链接。也即：把链接这个过程推迟到了运行时再进行。
    (2) 动态链接会在内存中只有一个共享的目标文件，不会存在多个副本；那么在磁盘中存储的也是链接前的目标文件，共享目标文件也只用存储一份即可，需要时加载至内存即可。
    (3) 在内存中共享一个目标文件模块的好处：不仅可以节省内存，还可以减少物理页面的换入换出，也可以增加CPU的缓存命中率，因为不同
2. 简单的动态链接例子
3. 地址无关代码
4. 延迟绑定(PLT)
5. 动态链接相关结构
6. 动态链接的步骤和实现
7. 显示运行时链接

本章小结
