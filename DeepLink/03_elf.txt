1.目标文件的格式
(1) 可执行文件格式：Windows下的PE和Linux的ELF(Executable Linkable Format)，都是COFF格式的变种；
(2) 目标文件是源码编译后但未进行链接的中间文件(Windows的.obj和Linux的.o)，和可执行文件的格式很类似，所以一般跟可执行文件采用一种格式存储；
(3) 动态链接库文件(Windows的.dll和Linux的.so)和静态链接库文件(Windows的.lib和Linux的.a)都按照可执行文件(Windows的.exe和Linux的ELF可执行文件)格式存储；

2.目标文件
2.1
2.2
2.3

3.elf文件结构描述
-------------------------
|       ELF Header      |
-------------------------
|       .text           |
-------------------------
|       .data           |
-------------------------
|       .bss           |
-------------------------
|       ·····           |
|     other sections    |
-------------------------
|  section header table ｜
-------------------------
｜   string table       ｜
｜   symbol table       ｜
｜   ....               ｜
-------------------------
3.1 头文件
3.2 段表
3.3 重定位表
3.4 字符串表

4.链接的接口 -- 符号
4.1 在链接中，函数和变量统称为符号(symbol)，函数名和变量名就是符号名；
4.2 符号修饰：函数名/变量名 ->> 符号名；
4.3 函数签名：包含一个函数的信息，包括函数名、参数类型、所属类、所属命名空间等；
4.4 编译器和链接器在处理符号时，会使用名称修饰，将每个函数签名对应一个修饰后名称；
4.5 强符号和弱符号：
    （1）C++编译器会将在 extern “C” 的大括号里面的代码当作C语言代码处理。具体的会按照C语言的规则进行符号修饰，使C++能够兼容C语言定义的符号，可以链接起来。
    （2）编译器默认函数和初始化后的全局变量称为强符号；
    （3）未初始化的全局变量为弱符号；也可通过GCC的  “__attribute__((weak))” 来将强符号定义为弱符号;
     
