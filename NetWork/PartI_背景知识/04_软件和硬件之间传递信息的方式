目前软硬件间传递信息的机制包括: 读写寄存器、数据缓存、队列、中断等；这些机制并不是孤立存在的，而是存在相互依赖的关系。

1. 寄存器
1.1 读写寄存器是一种由软件发起、硬件被动响应的信息传递方式；
1.2 狭义的寄存器是指：处理器内部用来暂存指令、数据和地址的寄存器，如程序计数器PC/指令寄存器IR等；广义寄存器：系统中的硬件设备，包括CPU芯片内部的各种控制器和网卡、硬盘和外设，都提供了可由处理器核根据地址通过总线直接访问的存储单元；

2. 数据缓存
2.1 以数据缓存为媒介，是一种在软件和硬件间传递大量数据时常用的方法；
2.2 传递数据前，软件负责在内存中申请一段地址空间作为数据缓存，并将此数据缓存的物理地址写入硬件中的地址寄存器；软硬件通过此段数据缓存向对方传递数据；实际中会申请多段，或申请一段后分成多段，以实现同时收发多种数据；
2.3 数据缓存传递数据的一般流程：
    (1) 软件 -> 硬件：软件将应用数据写入内存中的数据缓存->软件写寄存器通知硬件->硬件执行DMA将数据从内存复制到硬件内部缓存；
    (2) 硬件 -> 软件：硬件执行DMA将数据从硬件内部缓存复制到内存的数据缓存->硬件触发中断，CPU执行中断处理程序->软件访问内存的数据缓存；

3. 队列和描述符
3.1 在数据收发领域，一般使用的是环形队列，并采用生产者消费者模式；
3.2 在以软件(驱动程序)是队列中的数据生产者，硬件是队列中数据的消费者；队列中的对象(元素)称为描述符，每个描述符中保存了一个数据缓存(对应一个数据包)的物理地址、长度等信息；

4. 中断
4.1 中断的作用：处理器向设备发出命令后即可处理其他任务；当设备执行命令后会发送中断信号给处理器，处理器就可回过头来获取命令执行的结果；
4.2 中断也被应用在其他场景：处理(处理器内部或外部)的紧急任务，处理机器故障，实现定时器等；
4.3 中断的实现原理及过程：
    (1) 每个处理器核内部都可以通过内部总线访问处于CPU芯片上的各种控制器，负责中断处理的是可编程中断控制器(PIC);
    (2) 每个处理器核都有一个中断引脚(INT)，当此引脚的电压发生变化是，处理器核认为收到了一个中断信号，会立即停止当前程序，进入中断处理流程；
    (3) CPU芯片上的其他控制器都可以产生中断，并通过自己的中断线发送中断信号给PIC，中断控制器会进行分发；
    (4) 中断控制器的分发是根据自己的配置，决定是否对到来的中断进行处理，以及如需处理，由哪个核处理，随后发送中断信号给指定的核；
    (5) 处理器核收到中断信号后，会跳转到某个特定的地址开始执行中断处理程序；(中断处理程序实际上涉及一系列的函数调用和操作)。
4.4 PCI/PCIe设备的中断
    一般某个外部设别要发起中断只能通过I/O引脚传递进CPU，但PCI/PCIe总线是例外，其提供了Legacy中断方式和MSI/MSI-X中断方式，其中PCIe必须支持MSI/MSI-X中断方式，PCI必须支持Legacy中断方式；

5. DMA
5.1 DMA(Direct memory access) 直接存储器访问，意为外设对内存的读写过程可以不用CPU参与而直接进行；
5.2 若在总线上挂一个DMA控制器，当网卡想从内存中复制数据时，除了一些必要的控制命令，整个数据复制过程都是由DMA控制器完成的；
5.3 DMA控制器复制数据时先将数据通过总线复制到DMA控制器内部的寄存器/缓存中，再复制到网卡设备的存储空间中。
