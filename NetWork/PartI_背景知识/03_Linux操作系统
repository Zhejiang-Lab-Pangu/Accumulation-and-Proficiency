1. 背景
   1.1 操作系统要处理很多基本事务，主要包括：管理与配置内存、决定系统资源的供需和优先使用次序、控制输入与输出设备、操作网络、管理系统文件等；
   1.2 一般来说，一个linux发行版包括：
      (1) linux内核;
      (2) 将整个软件安装到计算机上的一套安装工具；
      (3) 各种GNU软件；
      (4) 其他一些自由软件和一些Linux发行版的专有软件。

2. 用户态和内核态
   2.1 用户态和内核态是指Linux操作系统中运行的进程所处的两种状态；具体来讲，当进程执行应用程序自身代码时，称该进程处于用户态运行，当进程执行系统调用后进入内核代码中执行，称进程处于内核态运行；
   2.2 进程在用户态和内核态执行时，所拥有的权限不同(主要是指令执行权限和内存访问权限)

3. 虚拟地址、物理地址和页表
   3.1 虚拟地址和物理地址之间的映射由操作系统建立，并保存为页表放入系统内存；程序运行过程中，处理器执行和内存读写有关的指令是，指令中的地址为虚拟地址，此虚拟地址会被MMU转换为物理地址再发到物理总线上；MMU根据页表的内容执行这种转换；
   3.2 分页是指把物理内存分成固定大小的块，每块就是一个页，操作系统以页为单位进行内存管理；
   3.3 TLB(translation lookaside buffer): 专门的Cache，用来缓存页表，一般来说TLB很小，只能缓存几十到几百个页表项。

4. 用户空间和内核空间
   4.1 Linux内核在有限的物理资源上为每个进程都建立了一个虚拟地址空间；对32位操作系统而言，每个进程的虚拟地址空间最大为4GB；在此基础上，Linux又将虚拟地址空间划分为两部分：用户空间和内核空间；
   4.2 一般而言，4GB中最高的1GB由运行在内核态的程序使用，称内核空间；较低的3GB由运行在用户态的程序使用，称为用户空间；
   4.3 每个用户态执行的进程都可以通过系统调用进入内核态执行，所以实际上Linux内核中的资源由系统内所有的进程共享；
   4.4 无论内核空间还是用户空间，两段不同的虚拟地址都可映射到同一段物理内存，此时这段物理内存被称为共享内存；这是两个进程或同一个进程的用户态和内核态之间快速交换数据的一种方式；

5. Linux 内核
   5.1 Linux内核由几大子系统构成，分别是：进程调度、进程间通信(PIC)、内存管理、虚拟文件系统和网络接口
   5.2 Linux内核的网络接口子系统提供了对各种网络标准和各种网络硬件的支持，可分为2个部分：Linux网络协议栈和网络设备驱动程序；其中，网络协议栈部分负责实现各种网络传输协议，提供路由和地址解析等功能；网络设备驱动程序负责操作具体的硬件设备(主要是网卡)，直接实现计算机和网络间的数据交换；

6. Linux设备驱动程序
   6.1 设备驱动程序简称驱动程序(driver)；驱动程序直接和底层硬件打交道，按照某种逻辑完成读写设备寄存器、中断处理、轮询设备状态等工作，最终实现让网络设备收发数据，让硬盘记录文件或让显示器显示图像等；
   6.2 对于自研的设备，驱动程序必须按照操作系统的驱动架构，自行设计、编写、编译和安装驱动程序，要求工程师必须了解操作系统的驱动架构、总线特性、设备的访问方式、访问设备的时机、处理器和设备的大小端差异等信息。
